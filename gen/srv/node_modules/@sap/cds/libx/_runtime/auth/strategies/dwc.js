const cds = require('../../cds')
const LOG = cds.log()

function decode(req, header, parsed) {
  if (!req.headers[header]) return
  return parsed
    ? JSON.parse(Buffer.from(req.headers[header], 'base64').toString('utf-8'))
    : Buffer.from(req.headers[header], 'base64').toString('utf-8')
}

class DwcStrategy {
  constructor() {
    this.name = 'dwc'
  }

  authenticate(req) {
    let tenant, usr, scopes, attr
    try {
      tenant = decode(req, 'dwc-tenant')
      usr = decode(req, 'dwc-user', true)
      scopes = decode(req, 'dwc-scopes', true) || []
      attr = decode(req, 'dwc-xsuaa-attributes', true) || {}
    } catch (e) {
      LOG._warn && LOG.warn('Error while parsing headers for dwc-auth:', e)
      return this.fail()
    }
    if (!tenant || !usr) return this.fail()

    const user = new cds.User({
      id: usr.logonName,
      tenant,
      _roles: ['any', 'authenticated-user', ...scopes],
      attr: Object.assign(attr, usr)
    })

    // set _req for locale getter
    Object.defineProperty(user, '_req', { enumerable: false, value: req })

    this.success(user)
  }
}

module.exports = DwcStrategy
